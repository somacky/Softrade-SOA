using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ServiceModel;
using CustomSoft.Template.Modelo.Servicios.Request;
using CustomSoft.Template.Modelo.Servicios.Response;

namespace CustomSoft.Template.Servicios.Seguridad.Contratos
{
    [ServiceContract]
    public interface ISoftradeService
    {
        [OperationContract]
        UsuarioOperacionResponse UsuarioExecute(UsuarioOperacionRequest request);                    

        /// <summary>
        /// Espera recibir un RFC válido para compararlo con los dados de alta en la base
        /// de datos para verificar y posteriormente regresar un id 
        /// </summary>
        /// <param name="request">Dentro viene el RFC que se solicita</param>
        /// <returns></returns>
        [OperationContract]
        RFCResponse ExtraerRFC(RFCRequest request);

        [OperationContract]
        CuentaGastoOperacionResponse CuentaGastoExecute(CuentaGastoOperacionRequest request);

        [OperationContract]
        OperacionPedimentoResponse ExecuteOperacionPedimento(OperacionPedimentoRequest request);

        [OperationContract]
        ReporteadorResponse ExecuteReportes(ReporteadorRequest request);        

        [OperationContract]
        CatalogoEspecificoOperacionResponse ExecuteOperacionCatalogoEspecifico(
            CatalogoEspecificoOperacionRequest request);
        [OperationContract]
        ExpedienteDigitalResponse ExtraerExpedienteDigital(ExpedienteDigitalRequest request);

        [OperationContract]
        ExpedienteDigitalInsertResponse InsertarExpedienteDigital(ExpedienteDigitalInsertRequest request);

        [OperationContract]
        DocumentoExpedienteDigitalResponse ExtraerDocumento(DocumentoExpedienteDigitalRequest request);

        [OperationContract]
        NotificacionResponse OperacionNotificacion(NotificacionRequest request);

        /// <summary>
        /// Operaciones para AplicacionMotor
        /// </summary>
        /// <param name="request"></param>
        /// <returns></returns>
        [OperationContract]
        OperacionMotorResponse ExecuteOperacionMotor(OperacionMotorRequest request);

        [OperationContract]
        OperacionEmpresaItemResponse ExecuteOperacionEmpresaItem(OperacionEmpresaItemRequest request);

        [OperationContract]
        OperacionEmpresaListaResponse ExecuteOperacionEmpresaLista(OperacionEmpresaListaRequest request);

        [OperationContract]
        OperacionArticuloResponse OperacionArticulo(OperacionArticuloRequest request);

        [OperationContract]
        DatosCOVEResponse OperacionCOVE(DatosCOVERequest request);

        [OperationContract]
        DigitalizacionVUCEMResponse GetDigitalizacionVUCEM(DigitalizacionVUCEMRequest request);

    }
}
