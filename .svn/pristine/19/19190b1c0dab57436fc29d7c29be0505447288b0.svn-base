using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CustomSoft.Template.Dominio.Contratos;
using CustomSoft.Template.Modelo.Compartido;
using CustomSoft.Template.Modelo.Servicios.Request;
using CustomSoft.Template.Modelo.Servicios.Response;
using MCS.ApplicationBlock.Logging;
using MCS.ApplicationBlock.Logging.Providers;
using MCS.Factory;

namespace CustomSoft.Template.Servicios.Seguridad.Controller
{
    public class TokenController : IDisposable
    {
         private ITokenDominio iTokenDominio = null;

        public TokenController()
        {
            iTokenDominio = FactoryEngine<ITokenDominio>.GetInstance("ITokenDominioConfig");
        }

        public TokenResponse OperacionToken(TokenRequest request)
         {
             var response = new TokenResponse()
             {
                 EjecucionValida = false,
                 MensajeError = string.Empty,
                 IdUsuarioEjecucion = request.IdUsuarioEjecucion
             };

             try
             {
                 switch (request.TipoLlamado)
                 {
                         case EnumeradorToken.BuscarToken:
                         response.Item = iTokenDominio.BuscarToken(request.Item);
                         break;

                     case EnumeradorToken.GetToken:
                         response.Item = iTokenDominio.GenerarToken(request.Item);
                         break;
                 }
                 response.EjecucionValida = true;
             }
             catch (Exception ex)
             {
                 response.MensajeError = ex.Message;
                 using (LoggingHelper helper = new LoggingHelper(TipoRepositorio.Xml))
                 {
                     helper.Registrar(ex);

                 }
             }
             return response;
         }

        public void Dispose()
        {
            iTokenDominio.Dispose();
            GC.SuppressFinalize(this);
        }

    }
}
